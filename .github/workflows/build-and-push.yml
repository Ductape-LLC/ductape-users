name: Build and Push Container Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Print Latest Commit SHA
        run: echo "Latest Commit SHA - ${{github.sha}}"

      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean

          docker system prune -af

          df -h

      - name: Build, Tag and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ductape
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Setup Task Definition file
        uses: restackio/update-json-values-action@v1.0.0
        with:
          file: task_definition.json
          values: '{
            "NODE_ENV_VALUE": "${{ secrets.NODE_ENV }}",
            "MODULE_VALUE": "${{ secrets.MODULE }}",
            "ENC_KEY_VALUE": "${{ secrets.ENC_KEY }}",
            "DB_HOST_VALUE": "${{ secrets.DB_HOST }}",
            "EMAIL_SERVICE_VALUE": "${{ secrets.EMAIL_SERVICE }}",
            "DEVELOPER_SERVICE_VALUE": "${{ secrets.DEVELOPER_SERVICE }}",
            "USER_SERVICE_VALUE": "${{ secrets.USER_SERVICE }}",
            "GOOGLE_CLIENT_ID_VALUE": "${{ secrets.GOOGLE_CLIENT_ID }}",
            "GOOGLE_CLIENT_SECRET_VALUE": "${{ secrets.GOOGLE_CLIENT_SECRET }}",
            "GIT_CLIENT_ID_VALUE": "${{ secrets.GIT_CLIENT_ID }}",
            "GIT_CLIENT_SECRET_VALUE": "${{ secrets.GIT_CLIENT_SECRET }}",
            "LINKEDIN_CLIENT_ID_VALUE": "${{ secrets.LINKEDIN_CLIENT_ID }}",
            "LINKEDIN_CLIENT_SECRET_VALUE": "${{ secrets.LINKEDIN_CLIENT_SECRET }}",
            "USER_SERVICE_VALUE": "${{ secrets.USER_SERVICE }}",
            "LOGIN_ENC_KEY_VALUE": "${{ secrets.LOGIN_ENC_KEY }}",
            "DUCTAPE_SIGNIN_URL_VALUE": "${{ secrets.DUCTAPE_SIGNIN_URL }}",
            "PRICING_SERVICE_VALUE": "${{ secrets.PRICING_SERVICE }}"
            }'

      - name: Print Task Definition
        run: cat ${{ github.workspace }}/task_definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task_definition.json
          container-name: ductape-users
          image: ${{ steps.build-image.outputs.image }}

      - name: Ensure jq is installed
        run: sudo apt-get install -y jq

      - name: Register Task Definition
        id: register-task-def
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://${{ steps.task-def.outputs.task-definition }} \
            | jq -r '.taskDefinition.taskDefinitionArn')
          echo "::set-output name=taskDefArn::$TASK_DEF_ARN"

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster ductape \
            --service ductape-users-service \
            --task-definition ${{ steps.register-task-def.outputs.taskDefArn }} \
            --desired-count 1 \
            --network-configuration "awsvpcConfiguration={subnets=["subnet-aaf5ffc2", "subnet-b7f2b2cd", "subnet-e2a308ae"],securityGroups=["sg-0326bdf09b280637f"],assignPublicIp=ENABLED}" \
            --load-balancers "targetGroupArn=arn:aws:elasticloadbalancing:us-east-2:423650960837:targetgroup/ductape-users/6d01a8c189175269,containerName=ductape-users,containerPort=8002" \
            --force-new-deployment
